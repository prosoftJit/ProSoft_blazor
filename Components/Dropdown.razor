
@namespace ProSoft.Components

@typeparam TItem where TItem: class, new()

<FluentStack>
</FluentStack>

@* <RadzenStack Orientation=Radzen.Orientation.Horizontal Gap=0>
    <RadzenDropDown
        Class="w-100"
        AllowClear="true" 
        TValue="long" 
        @bind-Value=Value 
        AllowVirtualization="true"
        AllowFiltering="true" 
        Data=GetItems?.Invoke() 
        TextProperty=@TextProperty 
        ValueProperty=@ValueProperty 
        Change="DropdownChanged"
        />
    <RadzenButton Style="max-width: 35px;" Icon=edit Click="()=>askEdit=Value" />
</RadzenStack>
 *@
@if (askEdit > 0) {
    <ProSoft.Components.ModalDialog Title="Modal" OnCancel="()=>askEdit = 0" Size="modal-fullscreen">
        <ModalBody>
            @OnEdit
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ProSoft.Components.ModalDialog>
}

@code {
    [Parameter] public long Value {get;set;} = 0;
    [Parameter] public Func<IEnumerable<TItem>>? GetItems {get;set;} = null;
    [Parameter] public string TextProperty {get;set;} = "Text";
    [Parameter] public string ValueProperty {get;set;} = "Value";
    [Parameter] public Action? OnChange {get;set;} = null;
    [Parameter] public RenderFragment? OnEdit {get;set;} = null;
    [Parameter] public EventCallback<long> ValueChanged {get;set;}

    long askEdit = 0;

    void DropdownChanged(object obj) {
        // object is the new id
        OnChange?.Invoke();
     }
}
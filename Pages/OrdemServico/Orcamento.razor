@page "/OrdemServico/Orcamento"
@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore
@using BlazorBootstrap
    
    <FluentGrid>
        <FluentGridItem md="2">
            <FluentTextField Value="@Model.IdOrcamento.ToString("000000")" Label="Id" />
        </FluentGridItem>
        <FluentGridItem md="2">
            <FluentDatePicker Label="Data" @bind-Value="Data" />
        </FluentGridItem>
        <FluentGridItem md="4">
            <FluentCombobox Label="Cliente" @bind-SelectedOption="Model.Cliente" Items="ctx.clientes" OptionText="c=>c.Nome" />
            <FluentValidationMessage For="()=>Model.Cliente" />
            <FluentButton IconStart="new Icons.Regular.Size12.Edit()" OnClick="()=>askEditCliente=Model.Cliente" />
        </FluentGridItem>
    </FluentGrid>

    <GenericTemplate2
        Items="Model.Items" 
        TItem="itemdoorcamento"
        Contexto="ctx"
        >
        <TableHeader>
            <th>Quant</th>
            <th>Un</th>
            <th>Descrição</th>
            <th>P. Venda</th>
            <th>Desconto</th>
            <th>Total</th>
        </TableHeader>
        <RowTemplate Context="OrcItem">
            <OS_row Model=OrcItem Contexto=ctx OnNeedCompras="()=>ctx.compras.Include(k=>k.Mercadoria).OrderBy(k=>k.Mercadoria.Descricao).ToArray()" />
        </RowTemplate>
        <TableFooter>
            <tr>
                <td colspan="5" class="text-end">Total</td>
                <td></td>
            </tr>
        </TableFooter>
    </GenericTemplate2>


<ModalDialog Title="Editar Cliente" Size="modal-lg" @bind-Visible=ModalVisible>
    <ModalBody>
        <ProSoft.Pages.Cadastros.Cliente idCliente="askEditCliente.idCliente"/>
    </ModalBody>
    <ModalFooter>
        <FluentButton Type="Microsoft.Fast.Components.FluentUI.ButtonType.Submit" FormId="eqpForm" />
    </ModalFooter>
</ModalDialog>


@code {
    [Parameter] public orcamento Model { get; set; } = new();

    [Parameter, EditorRequired] public Contexto ctx {get;set;} = new(); // new for designtime purposes

    cliente? askEditCliente = null;

    bool ModalVisible { get { return askEditCliente != null; } set { if (!value) askEditCliente = null; } }

    DateTime? Data
    {
        get { return Model.Data; }
        set { Model.Data = value ?? DateTime.Today; }
    }

    protected override void OnInitialized() {
        if (Model.Items.Count == 0)
            AddRow();
    }

    void AddRow()
    {
        itemdoorcamento io = new();
        Model.Items.Add(io);
        StateHasChanged();
    }

    void Submit(orcamento orc) {
        if (orc.IdOrcamento == 0)
            ctx.Entry(orc).State = EntityState.Added;
        else
            ctx.Entry(orc).State = EntityState.Modified;
        ctx.SaveChanges();
    }

    void ClienteChanged() {
        Model.Cliente = ctx.clientes.Find(Model.Cliente_IdCliente) ?? new();
    }
 }
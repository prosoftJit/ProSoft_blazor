@page "/OrdemServico/Orcamento"
@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore
@using BlazorBootstrap
    
<RadzenFormField Text="Id">
    <RadzenNumeric Format="000000" Value="Model.IdOrcamento" Disabled=true />
</RadzenFormField>
<RadzenFormField Text="Data">
    <RadzenDatePicker @bind-Value=Model.Data />
</RadzenFormField>
<RadzenFormField Text="Cliente">
    <RadzenDropDown @bind-Value=Model.Cliente Data="ctx.clientes" TextProperty="Nome" />
    <RadzenButton Icon="edit" Click="()=>askEditCliente=Model.Cliente" />
</RadzenFormField>

    <GenericTemplate3
        Items="Model.Items.AsQueryable()" 
        TItem="itemdoorcamento"
        Contexto="ctx"
        >
        <GridHeaderTemplate>
            <th>Quant</th>
            <th>Un</th>
            <th>Descrição</th>
            <th>P. Venda</th>
            <th>Desconto</th>
            <th>Total</th>
        </GridHeaderTemplate>
        <GridRowTemplate Context="cp">
            <OS_row Model=cp Contexto=ctx OnNeedCompras="()=>ctx.compras.Include(k=>k.Mercadoria).OrderBy(k=>k.Mercadoria.Descricao).ToArray()" />
        </GridRowTemplate>
        <GridFooterTemplate>
            <td colspan="5" class="text-end">Total</td>
            <td></td>
        </GridFooterTemplate>
    </GenericTemplate3>


<ModalDialog Title="Editar Cliente" Size="modal-lg" @bind-Visible=ModalVisible>
    <ModalBody>
        <ProSoft.Pages.Cadastros.Cliente idCliente="askEditCliente.idCliente"/>
    </ModalBody>
    <ModalFooter>
        <FluentButton Type="Microsoft.Fast.Components.FluentUI.ButtonType.Submit" FormId="eqpForm" />
    </ModalFooter>
</ModalDialog>


@code {
    [Parameter] public orcamento Model { get; set; } = new();

    [Parameter, EditorRequired] public Contexto ctx {get;set;} = new(); // new for designtime purposes

    cliente? askEditCliente = null;

    bool ModalVisible { get { return askEditCliente != null; } set { if (!value) askEditCliente = null; } }

    DateTime? Data
    {
        get { return Model.Data; }
        set { Model.Data = value ?? DateTime.Today; }
    }

    protected override void OnInitialized() {
        if (Model.Items.Count == 0)
            AddRow();
    }

    void AddRow()
    {
        itemdoorcamento io = new();
        Model.Items.Add(io);
        StateHasChanged();
    }

    void Submit(orcamento orc) {
        if (orc.IdOrcamento == 0)
            ctx.Entry(orc).State = EntityState.Added;
        else
            ctx.Entry(orc).State = EntityState.Modified;
        ctx.SaveChanges();
    }

    void ClienteChanged() {
        Model.Cliente = ctx.clientes.Find(Model.Cliente_IdCliente) ?? new();
    }
 }
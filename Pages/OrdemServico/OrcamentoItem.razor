@page "/OrdemServico/OrcamentoItem"

@using ProSoft.Data
@using Microsoft.EntityFrameworkCore

<td width="10%"><RadzenNumeric Format="N2" TextAlign="TextAlign.Center" @bind-Value="Model.Compra" ShowUpDown=false /></td>
<td width="10%"><RadzenTextBox TextAlign="TextAlign.Center" Value="@Model.Compra?.Mercadoria?.Unidade" Disabled=true /></td>

<td><RadzenDropDown @bind-Value="Model.Compra_IdCompra" AllowClear=true AllowFiltering=true AllowVirtualization=true TValue="long" Data="Contexto.compras" TextProperty="Descricao" ValueProperty="IdCompra" ClearSearchAfterSelection="true" Change=CompraChanged /></td>


<td>
    @* <InputSelect2
        TItem="compra"
        Value="Model.Compra_IdCompra"
        FormId="formId"
        ValueProperty="(i)=>i.IdCompra"
        OnNeedItems="OnNeedCompras"
        OnSelectionChanged="(i)=>{Model.Compra=i;StateHasChanged();}"
    >
        <OnEditRenderFragment Context="cp">
            <ProSoft.Pages.NotasCompra.Form idNotaCompra="@cp.NotaCompra_IdNotaCompra"></ProSoft.Pages.NotasCompra.Form>
        </OnEditRenderFragment>
    </InputSelect2> *@
   

    <RadzenDropDown AllowClear="true" TValue="long" @bind-Value=Model.Compra_IdCompra AllowVirtualization="true"
        AllowFiltering="true" Data=OnNeedCompras?.Invoke() TextProperty="Descricao" ValueProperty="IdCompra" Change="args=>CompraChanged(args)" />

</td>

<td width="10%"><RadzenNumeric Format="N2" ShowUpDown=false Value="@Model.Compra?.Venda" TextAlign=TextAlign.End Disabled=true /></td>
<td width="10%"><RadzenNumeric Format="N2" ShowUpDown=false @bind-Value="Model!.Desconto" TextAlign=TextAlign.End ></RadzenNumeric></td>
<td width="10%"><RadzenNumeric Format="N2" Value="_total" TextAlign=TextAlign.End Disabled=true ShowUpDown=false /></td>
<td width="1%"></td>

@code {
    [Parameter] public itemdoorcamento Model { get; set; } = new();
    [Parameter] public Action<float>? TotalChanged { get; set; } = null;
    [Parameter] public Action<itemdoorcamento>? OnAskDelete { get; set; } = null;
    [Parameter] public Func<compra[]>? OnNeedCompras { get; set; } = null;
    [Parameter] public Contexto Contexto {get;set;} = default!;

    float _total = 0;

    void CompraChanged(object args) {

        Model.Compra = Contexto.compras.Find(Model.Compra_IdCompra) ?? new();
    }
}
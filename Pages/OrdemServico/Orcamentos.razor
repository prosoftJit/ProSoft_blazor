@page "/OrdemServico/Orcamentos"
@using ProSoft.Data
@using Microsoft.EntityFrameworkCore
@using ProSoft.Components

<GenericTemplate2 TItem=orcamento Items="orcamentos" HeaderTitle=OrÃ§amentos ItemEditFormId=orcForm OnDelete=Delete>
    <TableHeader>
        <th>Id</th>
        <th>Data</th>
        <th>Cliente</th>
        <th></th>
    </TableHeader>
    <RowTemplate Context="orc">
        <td>@orc.IdOrcamento.ToString("000000")</td>
        <td>@orc.Data.ToShortDateString()</td>
        <td></td>
        <td width="1%"><a href="" @onclick:preventDefault><i class="oi oi-trash"></i></a></td>
    </RowTemplate>
    <ItemEditForm Context=orc>
        <Orcamento Model=orc ctx=ctx/>
    </ItemEditForm>
</GenericTemplate2>

@code {
    [Inject] NotificationService notificationService { get; set; } = default!;
    orcamento[] orcamentos = Array.Empty<orcamento>();

    Contexto ctx = new Contexto();

    protected override async Task OnInitializedAsync()
    {
        orcamentos = await LoadOrcs();
    }

    Task<orcamento[]> LoadOrcs()
    {
        try
        {
//            PreloadService.Show();
            return Task.FromResult(ctx.orcamentos.Include(k=>k.Cliente).OrderBy(k => k.Data).ToArray());
        }
        catch
        {

        }
        finally
        {
//           PreloadService.Hide();
        }
        return Task.FromResult(Array.Empty<orcamento>() );
    }

    void Delete(orcamento orc) {
        ctx.orcamentos.Remove(orc);
        ctx.SaveChanges();
    }
}

@page "/OrdemServico/OS_row"

@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore

<td width="10%"><RadzenNumeric Format="N2" TextAlign="TextAlign.Center" @bind-Value="Model.Quantidade" ShowUpDown=false /></td>
<td width="10%"><RadzenTextBox TextAlign="TextAlign.Center" Value="@Model.Compra?.Mercadoria?.Unidade" Disabled=true /></td>

<td>
<RadzenStack Orientation=Orientation.Horizontal Gap=0>
    <RadzenDropDown class="w-100" AllowClear="true" TValue="long" @bind-Value=Model.Compra_IdCompra AllowVirtualization="true"
        AllowFiltering="true" Data=OnNeedCompras?.Invoke() TextProperty="Descricao" ValueProperty="IdCompra" Change="args=>CompraChanged(args)" >
    </RadzenDropDown>
    <RadzenButton Style="max-length: 35px;" Icon=edit Click="CompraEdit"></RadzenButton>
</RadzenStack>

</td>

<td width="10%"><RadzenNumeric Format="N2" ShowUpDown=false Value="@Model.Compra?.Venda" TextAlign=TextAlign.End Disabled=true /></td>
<td width="10%"><RadzenNumeric Format="N2" ShowUpDown=false @bind-Value="Model!.Desconto" TextAlign=TextAlign.End ></RadzenNumeric></td>
<td width="10%"><RadzenNumeric Format="N2" Value="@Total()" TextAlign=TextAlign.End Disabled=true ShowUpDown=false /></td>
<td width="1%"><button type="button" class="btn btn-link text-danger" @onclick="()=>OnAskDelete?.Invoke(Model)"><i class="oi oi-trash"></i></button></td>

@if (askEditCompra != null) {
    <ModalDialog Size="modal-fullscreen" Title="Editar Compra" OnCancel="()=>askEditCompra=null">
        <ModalBody>
            <ProSoft.Pages.NotasCompra.Form Model=askEditCompra Contexto="Contexto" />
        </ModalBody>
        <ModalFooter>
        </ModalFooter>
    </ModalDialog>
}

@code {
    [Parameter] public itemdoorcamento Model { get; set; } = new();
    [Parameter] public Action<float>? TotalChanged { get; set; } = null;
    [Parameter] public Action<itemdoorcamento>? OnAskDelete { get; set; } = null;
    [Parameter] public Func<compra[]>? OnNeedCompras { get; set; } = null;
    [Parameter] public Contexto Contexto {get;set;} = default!;

    float _total = 0;
    float Total()
    {
        float t = Model.Quantidade * (Model.Compra?.Venda ?? 0) - Model.Desconto;
        if (t != _total)
        {
            _total = t;
            TotalChanged?.Invoke(_total);
        }
        return _total;
    }
    void CompraChanged(object args) {
        Model.Compra = Contexto.compras.FirstOrDefault(K=>K.IdCompra == Model.Compra_IdCompra);
        StateHasChanged();
    }

    notacompra? askEditCompra = null;
    void CompraEdit() {
        askEditCompra = Model.Compra?.NotaCompra ?? new();
    }

}
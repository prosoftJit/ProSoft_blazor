@page "/OrdemServico/{idOrdemDeServico:long}"
@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore
@using BlazorBootstrap

    <RadzenRow>
        <RadzenColumn Size="2" class="w-100">
            <RadzenFormField Text="Id" >
                <RadzenNumeric Format="000000" ShowUpDown=false Disabled=true Value="@Model.IdOrdemDeServico" TextAlign="Radzen.TextAlign.Center" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="2">
            <RadzenFormField Text="Data" class="w-100">
                <RadzenDatePicker @bind-Value=Model.Data DateFormat="dd/MM/yyyy" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size=5>
            <RadzenFormField Text=Equipamento class="w-100">
                <RadzenDropDown @bind-Value="Model.Equipamento_IdEquipamento" AllowClear=true AllowFiltering=true AllowVirtualization=true TValue="long" Data="ctx.equipamentos" TextProperty="Descricao" ValueProperty="IdEquipamento" Change="EquipamentoChanged" ClearSearchAfterSelection="true" />
                <RadzenButton Icon="edit" Style="max-width: 35px;" Click="()=>EditEquipamento(Model.Equipamento)" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size=5>
            <RadzenFormField Text=Recebido class="w-100">
                <RadzenDropDown @bind-Value="Model.FuncionarioEnt_IdFuncionario" AllowClear=true AllowFiltering=true AllowVirtualization=true TValue="long" Data="ctx.funcionarios" TextProperty="Nome" ValueProperty="IdFuncionario" @*Change="()=>FuncionarioChanged"*@ ClearSearchAfterSelection="true" />
            </RadzenFormField>
        </RadzenColumn>
    </RadzenRow>

    <RadzenFormField Text="Detalhes do Equipamento" class="w-100 mt-2 mb-2">
        <RadzenTextArea @bind-Value="@Model.Acessorios" Rows="3" />
    </RadzenFormField>

    <RadzenFormField Text="Defeito apresentado" class="w-100 mt-2 mb-2">
        <RadzenTextArea @bind-Value="@Model.DefeitoApresentado" Rows="3" />
    </RadzenFormField>

    <div class="row my-1">
        @* <FloatingLabel InputId="IdNotaVenda" Text="Id da Nota" Columns="2">
            <input type="text" value="@Model.IdNotaVenda.ToString("000000")" class="form-control" disabled="disabled" />
        </FloatingLabel>
        <FloatingLabel InputId="Data" Text="Data" Columns="2">
            <InputDate @bind-Value="Model!.Data" class="form-control"></InputDate>
        </FloatingLabel> *@
        @* <FloatingLabel InputId="Cliente_IdCliente" Class="d-flex" Text="Cliente" Columns="4">
            <InputSelect2 
                Context="Model" 
                FormId="formCli" 
                ValueProperty="(c)=>c.idCliente"
                TItem="cliente" 
                Value="@Model.Cliente?.idCliente" 
                OnNeedItems="()=>ctx.clientes.ToArray()"
                OnEdit="(c)=>{editCliente=c;StateHasChanged();}"
                OnSelectionChanged="(i)=>Model.Cliente=i"
            >
            </InputSelect2>
        </FloatingLabel> *@
    </div>

    <GenericTemplate2 
        Items="Model.Orcamentos" 
        TItem="orcamento"
        Contexto="Contexto"
        >
        <TableHeader>
            <th>Quant</th>
            <th>Un</th>
            <th>Descrição</th>
            <th>P. Venda</th>
            <th>Desconto</th>
            <th>Total</th>
        </TableHeader>
        <RowTemplate Context=Orca>
            @foreach (itemdoorcamento item in Orca.Items) {

                <OrcamentoItem Model="item" Contexto="ctx" 
                OnNeedCompras="()=>ctx.compras.Include(k=>k.Mercadoria).OrderBy(k=>k.Mercadoria.Descricao).ToArray()"
                TotalChanged="TotalChanged" />

            }
        </RowTemplate>
        <TableFooter>
            <tr>
                <td colspan="5" class="text-end">Total</td>
                <td>@_total.ToString("N2")</td>
            </tr>
        </TableFooter>
    </GenericTemplate2>

@if (askEditEqp != null) {
    <ModalDialog Title="Editar Equipamento" OnCancel="()=>askEditEqp=null" Size="modal-lg">
        <ModalBody>
            <RadzenTemplateForm TItem=equipamento Data=askEditEqp Submit=EqpSubmit id="eqpForm">
                <ProSoft.Pages.Cadastros.Equipamento Model="askEditEqp" ctx=ctx />
            </RadzenTemplateForm>
        </ModalBody>
        <ModalFooter>
            <RadzenButton Icon="save" Text="Salvar" ButtonType="Radzen.ButtonType.Submit"  Form="eqpForm" />
        </ModalFooter>
    </ModalDialog>
}

@code {
    [Parameter] public ordemdeservico Model { get; set; } = default!;
    [Parameter] public Contexto Contexto { get; set; } = default!;

    private Contexto ctx = new();

    float _total;
    void TotalChanged(float total)
    {
        _total = total;
    }

    void EquipamentoChanged() {
        Model.Equipamento = ctx.equipamentos.Find(Model.Equipamento_IdEquipamento);
    }

    equipamento? askEditEqp = null;
    void EditEquipamento(equipamento eqp) {
        askEditEqp = eqp ?? new();
    }

    void EqpSubmit(equipamento eqp) {
        if (eqp.IdEquipamento == 0)
            ctx.Entry(eqp).State = EntityState.Added;
        else
            ctx.Entry(eqp).State = EntityState.Modified;
        ctx.SaveChanges();
        askEditEqp = null;
    }
}
@page "/OrdemServico/OS"
@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore


    <FluentGrid>
        <FluentGridItem md="1">
            <FluentTextField Class="text-center" Value="@Model.IdOrdemDeServico.ToString("000000")" Disabled=true Label="Id" />
        </FluentGridItem>
        <FluentGridItem md="2">
            <FluentDatePicker  @bind-Value="Data" Required Label="Data" />
        </FluentGridItem>
        <FluentGridItem md="4">
            <FluentCombobox @bind-SelectedOption=Model.Equipamento Label="Equipamento" Items="ctx.equipamentos" OptionText="e=>e.Descricao" />
            <FluentButton IconStart="new Icons.Regular.Size12.Edit()" OnClick="()=>EditEquipamento(Model.Equipamento)" />
        </FluentGridItem>
        <FluentGridItem md="5">
            <FluentCombobox @bind-SelectedOption=Model.FuncionarioEnt Label="Recebido" Items="ctx.funcionarios" OptionText="f=>f.Nome" />
            <FluentButton IconStart="new Icons.Regular.Size12.Edit()" OnClick="()=>askEditFunc=Model.FuncionarioEnt??new()" />
        </FluentGridItem>
        <FluentTextArea Label="Detalhes do equipamento" @bind-Value=Model.Acessorios />
        <FluentTextArea Label="Defeito apresentado" @bind-Value=Model.DefeitoApresentado />
    </FluentGrid>

    <div class="row my-1">
        @* <FloatingLabel InputId="IdNotaVenda" Text="Id da Nota" Columns="2">
            <input type="text" value="@Model.IdNotaVenda.ToString("000000")" class="form-control" disabled="disabled" />
        </FloatingLabel>
        <FloatingLabel InputId="Data" Text="Data" Columns="2">
            <InputDate @bind-Value="Model!.Data" class="form-control"></InputDate>
        </FloatingLabel> *@
        @* <FloatingLabel InputId="Cliente_IdCliente" Class="d-flex" Text="Cliente" Columns="4">
            <InputSelect2 
                Context="Model" 
                FormId="formCli" 
                ValueProperty="(c)=>c.idCliente"
                TItem="cliente" 
                Value="@Model.Cliente?.idCliente" 
                OnNeedItems="()=>ctx.clientes.ToArray()"
                OnEdit="(c)=>{editCliente=c;StateHasChanged();}"
                OnSelectionChanged="(i)=>Model.Cliente=i"
            >
            </InputSelect2>
        </FloatingLabel> *@
    </div>

    <GenericTemplate2 
        Items="Model.Orcamentos" 
        TItem="orcamento"
        Contexto="Contexto"
        >
        <TableHeader>
            <th>Quant</th>
            <th>Un</th>
            <th>Descrição</th>
            <th>P. Venda</th>
            <th>Desconto</th>
            <th>Total</th>
        </TableHeader>
        <RowTemplate Context=Orca>
            @foreach (itemdoorcamento item in Orca.Items) {

                <OrcamentoItem Model="item" Contexto="ctx" 
                OnNeedCompras="()=>ctx.compras.Include(k=>k.Mercadoria).OrderBy(k=>k.Mercadoria.Descricao).ToArray()"
                TotalChanged="TotalChanged" />

            }
        </RowTemplate>
        <TableFooter>
            <tr>
                <td colspan="5" class="text-end">Total</td>
                <td>@_total.ToString("N2")</td>
            </tr>
        </TableFooter>
    </GenericTemplate2>

<ModalDialog Title="Editar equipamento" Size="modal-lg" @bind-Visible=ShowDialogEq>
    <ModalBody>
        <EditForm Model=askEditEqp OnValidSubmit=EqpSubmit id="eqpForm">
            <ProSoft.Pages.Cadastros.Equipamento Model="askEditEqp" ctx=ctx />
        </EditForm>
    </ModalBody>
    <ModalFooter>
        <FluentButton Type=ButtonType.Submit FormId="eqpForm" Id="submit">Salvar</FluentButton>
    </ModalFooter>
</ModalDialog>

<ModalDialog Title="Editar funcionario" Size="modal-lg" @bind-Visible=ShowDialogFunc>
    <ModalBody>
        <EditForm Model=askEditFunc OnValidSubmit=FuncSubmit id="funcForm">
            <ProSoft.Pages.Cadastros.Funcionario Model="askEditFunc" />
        </EditForm>
    </ModalBody>
    <ModalFooter>
        <FluentButton Type=ButtonType.Submit FormId="funcForm" Id="submit">Salvar</FluentButton>
    </ModalFooter>
</ModalDialog>


@code {
    [Parameter] public ordemdeservico Model { get; set; } = default!;
    [Parameter] public Contexto Contexto { get; set; } = default!;

    private Contexto ctx = new();

    DateTime? Data
    {
        get { return Model.Data; }
        set { Model.Data = value ?? DateTime.Today; }
    }

    float _total;
    void TotalChanged(float total)
    {
        _total = total;
    }

    funcionario? askEditFunc = null;
    bool ShowDialogFunc { get { return askEditFunc != null; } set { if (!value) askEditFunc = null; } }
    void FuncSubmit()
    {
        if (askEditFunc.IdFuncionario == 0)
            ctx.funcionarios.Add(askEditFunc);
        ctx.SaveChanges();
        askEditFunc = null;
    }

    equipamento? askEditEqp = null;
    bool ShowDialogEq { get { return askEditEqp != null; } set { if (!value) askEditEqp = null; } }
    void EditEquipamento(equipamento? eqp)
    {
        askEditEqp = eqp ?? new();
    }

    void EqpSubmit() {
        if (askEditEqp.IdEquipamento == 0)
            ctx.equipamentos.Add(askEditEqp);

        ctx.SaveChanges();
        askEditEqp = null;
    }
}
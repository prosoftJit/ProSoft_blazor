@page "/Mercadorias"
@using ProSoft.Data
@using ProSoft.Components

<GenericTemplate2  
    OnDelete=OnDelete
    ItemEditFormId=formId
    Items="mercadorias" 
    Context=ctx 
    TItem=mercadoria 
    HeaderTitle="Mercadorias" 
    HeaderDescription="Listagem de mercadorias cadastradas no sistema" 
    Contexto="ctx"
    >
    <TableHeader>
        <th>Id</th>
        <th>Descrição</th>
    </TableHeader>
    <RowTemplate Context="merc">
        <td class="text-center"><a href="" @onclick="()=>askEdit=merc" @onclick:preventDefault>@merc.IdMercadoria.ToString("000000")</a></td>
        <td>@merc.Descricao</td>
    </RowTemplate>
    <ItemEditForm Context=merc>
        <Mercadoria Model=merc Contexto=ctx />
    </ItemEditForm>
</GenericTemplate2>

@code {
    mercadoria? askEdit = null;
    [Inject] Radzen.NotificationService notificationService {get;set;} = default!;
    [Inject] Radzen.DialogService dialogService {get;set;} = default!;

    void AskEdit(long? idMercadoria)
    {
        if (idMercadoria == null) {
            askEdit = new();
            askEdit.Tipo = TipoMercadoria.Produto;
        }
        else
            askEdit = ctx.mercadorias.First(k=>k.IdMercadoria == idMercadoria);
    }
    void Submit()
    {
        if (askEdit != null) {
            if (askEdit?.IdMercadoria == 0)
                ctx.Entry(askEdit).State = EntityState.Added;
            else
                ctx.Entry(askEdit!).State = EntityState.Modified;

            ctx.SaveChangesAsync();

            notificationService.Notify(NotificationSeverity.Success, "Sucesso!", "As alterações foram salvas com sucesso.");

            LoadMercadorias();

            StateHasChanged();
        }
    }

    mercadoria[]? mercadorias;
    Contexto ctx = new Contexto();

    protected override async Task OnInitializedAsync()
    {
        await LoadMercadorias();
    }

    Task LoadMercadorias()
    {
        mercadorias = ctx.mercadorias.OrderBy(k => k.Descricao).ToArray();
        return Task.FromResult(mercadorias);
    }

    void OnDelete(mercadoria merc) {
        ctx.mercadorias.Remove(merc);
        ctx.SaveChanges();
    }
}

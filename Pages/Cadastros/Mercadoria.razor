@page "/Mercadoria"

@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components

<RadzenTemplateForm TItem=mercadoria Data=Model Submit=Submit >

    <DataAnnotationsValidator />
    <ValidationSummary Model="Model" />

    <RadzenRow class="mb-3">
        <RadzenColumn Size=1>
            <RadzenFormField Text="Id da Mercadoria" class="w-100">
                <RadzenNumeric Format="000000" @bind-Value="Model.IdMercadoria" Disabled="true" TextAlign="TextAlign.Center" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="5">
            <RadzenFormField Text="Descrição" class="w-100">
                <RadzenTextBox @bind-Value="Model.Descricao" />
                <RadzenLengthValidator Min="5" Max="200" Text="Descrição precisa ter entre 5 e 200 caracteres" /> 
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size=2>
            <RadzenFormField Text="NCM" class="w-100">
                <RadzenTextBox @bind-Value="Model.NCM" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size=1>
            <RadzenFormField Text="Unidade" class="w-100">
                <RadzenTextBox @bind-Value="Model.Unidade" />
                <RadzenRequiredValidator Text="Unidade é informação obrigatória" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size=2>
            <RadzenFormField Text="Código" class="w-100">
                <RadzenTextBox @bind-Value="Model.Codigo" />
            </RadzenFormField>
        </RadzenColumn>
    </RadzenRow>

</RadzenTemplateForm>

@code {
    [Parameter] public mercadoria Model { get; set; } = new();
    [Parameter, EditorRequired] public Contexto? Contexto {get;set;}
    [Inject] NotificationService? notificationService {get;set;}
    [Parameter] public Action<string>? OnClose {get;set;} = null;

    void Submit(mercadoria merc) {
        if (Model.IdMercadoria == 0)
            Contexto!.Entry(Model).State = EntityState.Added;
        else
            Contexto!.Entry(Model).State = EntityState.Modified;
        Contexto.SaveChanges();
        notificationService!.Notify(NotificationSeverity.Success, "Mercadoria", "Alterações feitas na mercadoria foram salvas com sucesso!");
    }
}
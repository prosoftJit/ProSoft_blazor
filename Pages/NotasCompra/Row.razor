@page "/NotasCompra/Row"
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore
@using ProSoft.Pages.Cadastros

<td width="10%"><RadzenNumeric ShowUpDown=false TextAlign="TextAlign.Center" TValue="float" @bind-Value="Model!.Quantidade" Format="N2" Change="()=>TotalChanged?.Invoke()" /></td>
<td width="10%"><RadzenTextBox value="@Model.Mercadoria?.Unidade" Disabled=true /></td>
<td>
    <Dropdown2
        TItem="mercadoria"
        @bind-Value="Model.Mercadoria"
        GetItems="()=>Contexto.mercadorias.OrderBy(k=>k.Descricao)" 
        TextProperty="Descricao" 
        OnDelete="(ctx, item)=>{ctx.mercadorias.Remove(item);ctx.SaveChanges();}"
        OnChange="(item)=>{Model.Mercadoria=item;StateHasChanged();}"
    >
        <OnEdit Context=merc>
            <Mercadoria Model="merc" Contexto="new Contexto()" />
        </OnEdit>
    </Dropdown2>
</td>
<td width="10%"><RadzenNumeric ShowUpDown=false TValue=float @bind-Value="Model.Custo" Format="N2" TextAlign=TextAlign.End Change="()=>TotalChanged?.Invoke()" /></td>
<td width="10%"><RadzenNumeric ShowUpDown=false TValue=float value="@Model.Total" Format="N2" TextAlign="TextAlign.End" Disabled=true /></td>
<td width="10%"><RadzenNumeric ShowUpDown=false @bind-Value="Model.Venda" Format="N2" TextAlign="TextAlign.End" /></td>

@code {
    [Parameter, EditorRequired] public compra Model { get; set; } = default!;
    [Parameter] public Func<mercadoria[]>? GetMercadorias { get;set; } = null;
    [Parameter] public Action? TotalChanged { get; set; } = null;
    [Parameter] public Action? MercadoriaChanged { get; set; } = null;
    [Inject] NotificationService? notificationService {get;set;} = default!;
    [Parameter, EditorRequired] public Contexto Contexto {get;set;} = default!;

    mercadoria? askEditMercadoria = null;
    void EditMercadoria() {
        askEditMercadoria = Model.Mercadoria ?? new();
    }
    void OnMercadoriaChanged() {
        Model.Mercadoria = Contexto.mercadorias.FirstOrDefault(k=>k.IdMercadoria == Model.Mercadoria_IdMercadoria);
        Console.WriteLine("changed");
    }
    void MercadoriaSave(Contexto ctx, mercadoria item) {
        if (item.IdMercadoria == 0)
            ctx.Entry(item).State = EntityState.Added;
        else
            ctx.Entry(item).State = EntityState.Modified;
        ctx.SaveChanges();
    }
}
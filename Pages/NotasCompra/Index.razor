@page "/NotasCompra/Index"
@using ProSoft.Data
@using Microsoft.EntityFrameworkCore
@using ProSoft.Components

@if (notascompra == null) {
    <p>Carregando...</p>
} else {
    <GenericTemplate2 
        Items="notascompra"
        Context=ctx
        HeaderTitle="Notas de Compra"
        HeaderDescription="Notas de entrada de estoque"
        OnDelete="ItemDelete"
        TItem=notacompra
        Contexto=ctx
        >
        <TableHeader>
            <th>Id</th>
            <th>NÃºmero</th>
            <th>Data</th>
            <th>Fornecedor</th>
            <th>Valor</th>
        </TableHeader>
        <RowTemplate Context="nfc">
            <td class="text-center"><a href="/NotasCompra/Form/@(nfc.IdNotaCompra)">@nfc.IdNotaCompra.ToString("000000")</a></td>
            <td>@nfc.NumeroNF</td>
            <td>@nfc.Data.ToShortDateString()</td>
            <td>@nfc.Fornecedor?.Nome</td>
            <td>@nfc.Total.ToString("N2")</td>
        </RowTemplate>
        <ItemEditForm Context=nc>
            <Form Model=nc />
        </ItemEditForm>        
    </GenericTemplate2>
}

@code {
    mercadoria[] Mercadorias = Array.Empty<mercadoria>();
    notacompra[] notascompra;
    Contexto ctx = new Contexto();

    protected override async Task OnInitializedAsync()
    {
        Mercadorias = ctx.mercadorias.ToArray();
        notascompra = await LoadNotas();
    }

    Task<notacompra[]> LoadNotas()
    {
        try
        {
            return Task.FromResult(ctx.notascompra.Include(k => k.Fornecedor).Include(k=>k.Items).OrderBy(k => k.Data).ToArray());
        }
        catch
        {

        }
        finally
        {
        }
        return Task.FromResult( Array.Empty<notacompra>() );
    }

    void ItemDelete(notacompra nc) {

    }
}

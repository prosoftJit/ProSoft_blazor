@page "/NotasCompra/Form/{idNotaCompra:long}"

@using System.ComponentModel.DataAnnotations
@using ProSoft.Data
@using ProSoft.Components
@using Microsoft.EntityFrameworkCore

<EditForm Model="Model" id=formId OnValidSubmit=Submit>
    <PageHeader Title="Compras" Description="Nota Fiscal de Compras">
    </PageHeader>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <RadzenFormField Text="Id">
        <RadzenNumeric Format="000000" Value="@Model.IdNotaCompra" Disabled=true />
    </RadzenFormField>
    <RadzenFormField Text="Número da NF">
        <RadzenTextBox @bind-Value=Model.NumeroNF />
    </RadzenFormField>
    <RadzenFormField Text="Data">
        <RadzenDatePicker @bind-Value=Model.Data />
    </RadzenFormField>
    <RadzenFormField Text="Fornecedor">
        <RadzenDropDown @bind-Value=Model.Fornecedor Data="Contexto.fornecedores" TextProperty="Nome" />
    </RadzenFormField>
    <RadzenFormField Text="Xml">
        <RadzenTextBox @bind-Value=Model.Xml />
    </RadzenFormField>

    <GenericTemplate3 TItem=compra Contexto="Contexto" Items="Model.Items.AsQueryable()" >
        <GridHeaderTemplate>
            <td>Quant</td><td>Un</td><td>Descrição</td><td>Unitário</td><td>Total</td><td>Margem</td><td>P.Venda</td>
        </GridHeaderTemplate>
        <GridRowTemplate Context="cp">
            <td width="10%"><RadzenNumeric @bind-Value=cp.Quantidade Format="N2" TextAlign="Radzen.TextAlign.End" /></td>
            <td width="10%"><RadzenTextBox Value="@cp.Mercadoria.Unidade" /></td>
            <td><RadzenDropDown @bind-Value=cp.Mercadoria Data="Contexto.mercadorias" TextProperty="Descricao" /></td>
            <td width="10%"><RadzenNumeric @bind-Value=cp.Custo Format="N2" TextAlign="Radzen.TextAlign.End" /></td>
            <td width="10%"><RadzenNumeric Value=cp.Total Format="N2" TextAlign="Radzen.TextAlign.End" /></td>
            <td width="10%"><RadzenNumeric @bind-Value=cp.Margem Format="N2" TextAlign="Radzen.TextAlign.End" /></td>
            <td width="10%"><RadzenNumeric @bind-Value=cp.Venda Format="N2" TextAlign="Radzen.TextAlign.End" /></td>
        </GridRowTemplate>
    </GenericTemplate3>
</EditForm>

@code {
    [Parameter] public notacompra Model{ get; set; } = new();
    //[Inject] public NotificationService notificationService {get;set;} = default!;
    [Parameter, EditorRequired] public Contexto Contexto {get;set;} = default!;

    IEnumerable<fornecedor> fornecedores = new List<fornecedor>();

    protected override void OnInitialized()
    {
        if (Model.Fornecedor != null)
        {
            fornecedores = new fornecedor[] { Model.Fornecedor };
        }

        base.OnInitialized();
    }

    void AddRow()
    {
        compra c = new();
        Model.Items.Add(c);
        StateHasChanged();
    }
    void Submit()
    {
        if (Model!.IdNotaCompra == 0)
            Contexto.Entry(Model).State = EntityState.Added;
        else
            Contexto.Entry(Model).State = EntityState.Modified;

        if (fornecedores != null)
            Model.Fornecedor = fornecedores.First();

        Contexto.SaveChanges();

        Model = Contexto.notascompra.First(k=>k.IdNotaCompra == Model.IdNotaCompra);

        //notificationService.Notify(NotificationSeverity.Success, "Venda", "Todos os dados da Venda foram salvos  com sucesso");

        StateHasChanged();
    }

    void DeleteRow(compra compra)
    {
        Model!.Items.Remove(compra);
    }

    void MercadoriaChanged(compra c) {
        c.Mercadoria = Contexto.Find<mercadoria>(c.Mercadoria_IdMercadoria);
    }
}
